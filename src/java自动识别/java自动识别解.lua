function mathing(sj)
    local sj1 = ""
    for i = 1, #sj do
        sj1 = sj1 .. string.char(sj[i])
    end
    return sj1
end
method = { 0, 1, 2, 3, 4, 5, 6, 7, 8 }
info = "自动抖枪压枪"
offset_pattern1 = offset_pattern2
a1 = 1
text_bbdate = "2023-04-10"
offset_pattern = 2
if (l080or2k == 1) then
    location = { { 243 / 1920, 658 / 1080 }, { 220 / 1920, 740 / 1080 }, { 219 / 1920, 805 / 1080 }, { 216 / 1920, 885 / 1080 } }
elseif (l080or2k == 2) then
    location = { { 325 / 2560, 883 / 1440 }, { 325 / 2560, 982 / 1440 }, { 325 / 2560, 1082 / 1440 }, { 325 / 2560, 1182 / 1440 } }
end
GunCombination1_1 = { "A99", "B301", "ZHZ", "DN", "ZZ", "PX", "LS", "HMLK_DD", "P20", "M600", "Lstar", "XBS", "E45", "B301DD", "PXDD", "HWK", "G7", "CN", "BZ", "CAR", "FCNS" }
GunCombination1_2 = { "Y_A99", "Y_B301", "Y_ZHZ", "Y_DN", "Y_ZZ", "Y_PX", "Y_LS", "Y_HMLK", "Y_P20", "Y_M600", "Y_Lstar", "Y_XBS", "Y_E45" }
squatKey = "l"            --下蹲按键
LS_LF = {
    { 1, 2, 13, 8 }, { 2, 3, 10, 8 }, { 3, 3, 4, 10 },
    { 4, 2, 6, 8 }, { 5, 3, 4, 8 }, { 6, 0, 2, 8 },
    { 7, -4, 2, 8 }
}
Y_LS_LF = {
    { 1, 0, 14, 5 }, { 2, 0, 7, 5 }, { 3, 0, 5, 5 },
    { 4, 0, 6, 5 }, { 5, 0, 5, 5 }, { 6, 0, 4, 5 },
    { 7, 0, 3, 5 }
}
LS_LF_time = 24
LS_LF_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }
}
BZ_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 },
    { 37, 0, 0 }, { 38, 0, 0 }, { 39, 0, 0 },
    { 40, 0, 0 }
}
BZ_offset_trim_ratio = { 1, 1 }
BZ_offset_trim_amend = { 0, 0 }
CN_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 },
    { 37, 0, 0 }, { 38, 0, 0 }, { 39, 0, 0 },
    { 40, 0, 0 }, { 41, 0, 0 }, { 42, 0, 0 },
    { 43, 0, 0 }, { 44, 0, 0 }, { 45, 0, 0 },
    { 46, 0, 0 }, { 47, 0, 0 }, { 48, 0, 0 },
    { 49, 0, 0 }, { 50, 0, 0 }, { 51, 0, 0 },
    { 52, 0, 0 }, { 53, 0, 0 }, { 54, 0, 0 },
    { 55, 0, 0 }
}
CN_offset_trim_ratio = { 1, 1 }
CN_offset_trim_amend = { 0, 0 }
G7_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }
}
G7_offset_trim_ratio = { 1, 1 }
G7_offset_trim_amend = { 0, 0 }
PXDD_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 }
}
PXDD_offset_trim_ratio = { 1, 1 }
PXDD_offset_trim_amend = { 0, 0 }
B301DD_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }
}
B301DD_offset_trim_ratio = { 1, 1 }
B301DD_offset_trim_amend = { 0, 0 }
E45_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
E45_offset_trim_ratio = { 1, 1 }
E45_offset_trim_amend = { 0, 0 }
M600_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
M600_offset_trim_ratio = { 1, 1 }
M600_offset_trim_amend = { 0, 0 }
Lstar_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
Lstar_offset_trim_ratio = { 1, 1 }
Lstar_offset_trim_amend = { 0, 0 }
B301_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }
}
B301_offset_trim_ratio = { 1, 1 }
B301_offset_trim_amend = { 0, 0 }
A99_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
A99_offset_trim_ratio = { 1, 1 }
A99_offset_trim_amend = { 0, 0 }
PX_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 }
}
PX_offset_trim_ratio = { 1, 1 }
PX_offset_trim_amend = { 0, 0 }
LS_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }
}
LS_offset_trim_ratio = { 1, 1 }
LS_offset_trim_amend = { 0, 0 }
HWK_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 }
}
HWK_offset_trim_ratio = { 1, 1 }
HWK_offset_trim_amend = { 0, 0 }
ZZ_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 }
}
ZZ_offset_trim_ratio = { 1, 1 }
ZZ_offset_trim_amend = { 0, 0 }
DN_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }
}
DN_offset_trim_ratio = { 1, 1 }
DN_offset_trim_amend = { 0, 0 }
M600_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 },
    { 37, 0, 0 }, { 38, 0, 0 }, { 39, 0, 0 },
    { 40, 0, 0 }, { 41, 0, 0 }, { 42, 0, 0 },
    { 43, 0, 0 }, { 44, 0, 0 }, { 45, 0, 0 },
    { 46, 0, 0 }, { 47, 0, 0 }, { 48, 0, 0 },
    { 49, 0, 0 }, { 50, 0, 0 }, { 51, 0, 0 },
    { 52, 0, 0 }, { 53, 0, 0 }, { 54, 0, 0 },
    { 55, 0, 0 }
}
M600_offset_trim_ratio = { 1, 1 }
M600_offset_trim_amend = { 0, 0 }
ZHZ_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
ZHZ_offset_trim_ratio = { 1, 1 }
ZHZ_offset_trim_amend = { 0, 0 }
P20_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 }
}
P20_offset_trim_ratio = { 1, 1 }
P20_offset_trim_amend = { 0, 0 }
Y_P20_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 }
}
Y_P20_offset_trim_ratio = { 1, 1 }
Y_P20_offset_trim_amend = { 0, 0 }
XBS_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 }
}
XBS_offset_trim_ratio = { 1, 1 }
XBS_offset_trim_amend = { 0, 0 }
Y_XBS_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 }
}
Y_XBS_offset_trim_ratio = { 1, 1 }
Y_XBS_offset_trim_amend = { 0, 0 }
HMLK_DD_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }, { 36, 0, 0 }
}
HMLK_DD_offset_trim_ratio = { 1, 1 }
HMLK_DD_offset_trim_amend = { 0, 0 }
FCNS_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }
}
FCNS_offset_trim_ratio = { 1, 1 }
FCNS_offset_trim_amend = { 0, 0 }
-----------------------------------------------------------------------------------------------
Y_E45_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }
}
Y_E45_offset_trim_ratio = { 1, 1 }
Y_E45_offset_trim_amend = { 0, 0 }
Y_A99_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
Y_A99_offset_trim_ratio = { 1, 1 }
Y_A99_offset_trim_amend = { 0, 0 }
Y_B301_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }
}
Y_B301_offset_trim_ratio = { 1, 1 }
Y_B301_offset_trim_amend = { 0, 0 }
Y_ZHZ_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
Y_ZHZ_offset_trim_ratio = { 1, 1 }
Y_ZHZ_offset_trim_amend = { 0, 0 }
Y_DN_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }
}
Y_DN_offset_trim_ratio = { 1, 1 }
Y_DN_offset_trim_amend = { 0, 0 }
Y_PX_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 }
}
Y_PX_offset_trim_ratio = { 1, 1 }
Y_PX_offset_trim_amend = { 0, 0 }
Y_LS_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 },
    { 28, 0, 0 }, { 29, 0, 0 }, { 30, 0, 0 },
    { 31, 0, 0 }, { 32, 0, 0 }, { 33, 0, 0 },
    { 34, 0, 0 }, { 35, 0, 0 }
}
Y_LS_offset_trim_ratio = { 1, 1 }
Y_LS_offset_trim_amend = { 0, 0 }
Lstar_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
Lstar_offset_trim_ratio = { 1, 1 }
Lstar_offset_trim_amend = { 0, 0 }
CAR_offset_trim_list = {
    { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 },
    { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 },
    { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 },
    { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 },
    { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 },
    { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 },
    { 19, 0, 0 }, { 20, 0, 0 }, { 21, 0, 0 },
    { 22, 0, 0 }, { 23, 0, 0 }, { 24, 0, 0 },
    { 25, 0, 0 }, { 26, 0, 0 }, { 27, 0, 0 }
}
CAR_offset_trim_ratio = { 1, 1 }
CAR_offset_trim_amend = { 0, 0 }
-----------------------------------------------------------------------------------------------
-----------------------------------
CAR_offset_list = {
    { 1, 1, 6, 3 }, { 2, 2, 6, 3 }, { 3, 2, 6, 3 },
    { 4, 2, 6, 3 }, { 5, 2, 6, 3 }, { 6, 2, 6, 3 },
    { 7, 2, 6, 3 }, { 8, 2, 6, 3 }, { 9, -5, 6, 3 },
    { 10, -5, 5, 3 }, { 11, -3, 3, 3 }, { 12, -3, 3, 3 },
    { 13, 1, 2, 3 }, { 14, -2, 2, 3 }, { 15, 2, 2, 3 },
    { 16, 3, 2, 3 }, { 17, 2, 1, 3 }, { 18, -2, 1, 3 },
    { 19, -2, 0, 3 }, { 20, -3, -1, 3 }, { 21, -2, 0, 3 },
    { 22, 2, 0, 3 }, { 23, 0, 0, 3 }, { 24, 0, 1, 3 },
    { 25, 0, 3, 3 }, { 26, 2, 3, 3 }, { 27, 2, 0, 3 }
}
CAR_offset_time = 20
BZ_offset_list = {
    { 1, 0, 3, 5 }, { 2, 3, 3, 5 }, { 3, 2, 3, 5 },
    { 4, -2, 3, 5 }, { 5, -2, 3, 5 }, { 6, -2, 2, 5 },
    { 7, -1, 3, 5 }, { 8, -2, 2, 5 }, { 9, -1, 3, 5 },
    { 10, -1, 2, 5 }, { 11, 2, 2, 5 }, { 12, 2, 2, 5 },
    { 13, 2, 2, 5 }, { 14, 2, 1, 5 }, { 15, 2, 1, 5 },
    { 16, 0, 2, 5 }, { 17, 0, 2, 5 }, { 18, 0, 1, 5 },
    { 19, 0, 1, 5 }, { 20, 0, 1, 5 }, { 21, 0, 2, 5 },
    { 22, 1, 2, 5 }, { 23, 0, 1, 5 }, { 24, 0, 1, 5 },
    { 25, 0, 1, 5 }, { 26, 1, 1, 5 }, { 27, 1, 2, 5 },
    { 28, 1, 2, 5 }, { 29, 2, 2, 5 }, { 30, 0, 2, 5 },
    { 31, 0, 2, 5 }, { 32, 0, 1, 5 }, { 33, 0, 1, 5 },
    { 34, 0, 1, 5 }, { 35, 0, 1, 5 }, { 36, 1, 1, 5 },
    { 37, 1, 2, 5 }, { 38, 1, 1.5, 5 }, { 39, 0, 1.5, 5 },
    { 40, 0, 1, 5 }
}
BZ_offset_time = 38
CN_offset_list = {
    { 1, 0, 0, 5 }, { 2, 0, 0, 5 }, { 3, 0, 0, 5 },
    { 4, 0, 0, 5 }, { 5, 0, 0, 5 }, { 6, 0, 0, 5 },
    { 7, 0, 0, 5 }, { 8, 0, 0, 5 }, { 9, 0, 0, 5 },
    { 10, 0, 0, 5 }, { 11, 0, 0, 5 }, { 12, 0, 0, 5 },
    { 13, 0, 0, 5 }, { 14, 0, 0, 5 }, { 15, 0, 0, 5 },
    { 16, 0, 0, 5 }, { 17, 0, 0, 5 }, { 18, 0, 0, 5 },
    { 19, 0, 0, 5 }, { 20, 0, 0, 5 }, { 21, 0, 0, 5 },
    { 22, 0, 0, 5 }, { 23, 0, 0, 5 }, { 24, 0, 0, 5 },
    { 25, 0, 0, 5 }, { 26, 0, 0, 5 }, { 27, 0, 0, 5 },
    { 28, 0, 0, 5 }, { 29, 0, 0, 5 }, { 30, 0, 0, 5 },
    { 31, 0, 0, 5 }, { 32, 0, 0, 5 }, { 33, 0, 0, 5 },
    { 34, 0, 0, 5 }, { 35, 0, 0, 5 }, { 36, 0, 0, 5 },
    { 37, 0, 0, 5 }, { 38, 0, 0, 5 }, { 39, 0, 0, 5 },
    { 40, 0, 0, 5 }, { 41, 0, 0, 5 }, { 42, 0, 0, 5 },
    { 43, 0, 0, 5 }, { 44, 0, 0, 5 }, { 45, 0, 0, 5 },
    { 46, 0, 0, 5 }, { 47, 0, 0, 5 }, { 48, 0, 0, 5 },
    { 49, 0, 0, 5 }, { 50, 0, 0, 5 }, { 51, 0, 0, 5 },
    { 52, 0, 0, 5 }, { 53, 0, 0, 5 }, { 54, 0, 0, 5 },
    { 55, 0, 0 }
}
CN_offset_time = 25
G7_offset_list = {
    { 1, 0, 5, 5 }, { 2, 0, 5, 5 }, { 3, 2, 5, 5 },
    { 4, 2, 5, 5 }, { 5, 2, 8, 5 }, { 6, 0, 8, 5 },
    { 7, 0, 8, 5 }, { 8, 0, 8, 5 }, { 9, 0, 8, 5 },
    { 10, 0, 8, 5 }, { 11, 0, 8, 5 }, { 12, 1, 8, 5 },
    { 13, 1, 8, 5 }, { 14, 1, 8, 5 }, { 15, 1, 8, 5 },
    { 16, 0, 6, 5 }, { 17, 0, 6, 5 }, { 18, 0, 6, 5 },
    { 19, 0, 7, 5 }, { 20, 0, 6, 5 }
}
G7_offset_time = 48
PXDD_offset_list = {
    { 1, 0, 4, 5 }, { 2, 0, 6, 5 }, { 3, 1, 4, 5 },
    { 4, 3, 5, 5 }, { 5, 1, 5, 5 }, { 6, 4, 5, 5 },
    { 7, -2, 7, 5 }, { 8, -2, 3, 5 }, { 9, -2, 5, 5 },
    { 10, -1, 4, 5 }, { 11, 0, 7, 5 }, { 12, 0, 4, 5 },
    { 13, 5, 3, 5 }, { 14, 3, 3, 5 }, { 15, 2, 4, 5 }
}
PXDD_offset_time = 66
B301DD_offset_list = {
    { 1, 0, 4, 5 }, { 2, 0, 5, 5 }, { 3, 0, 3, 5 },
    { 4, -1, 3, 5 }, { 5, 0, 5, 5 }, { 6, 0, 5, 5 },
    { 7, -2, 5, 5 }, { 8, -1, 5, 5 }, { 9, 0, 5, 5 },
    { 10, 2, 3, 5 }, { 11, 2, 3, 5 }, { 12, 1, 3, 5 },
    { 13, 0, 5, 5 }, { 14, 0, 3, 5 }
}
B301DD_offset_time = 54
E45_offset_list = {
    { 1, -1, 4, 5 }, { 2, -1, 4, 5 }, { 3, -1, 4, 5 },
    { 4, -1, 3, 5 }, { 5, -1, 2, 5 }, { 6, -2, 2, 5 },
    { 7, -2, 2, 5 }, { 8, -2, 2, 5 }, { 9, -3, 2, 5 },
    { 10, -1, 0, 5 }, { 11, -1, 1, 5 }, { 12, -1, 1, 5 },
    { 13, -2, 1.5, 5 }, { 14, -1, 1.5, 5 }, { 15, 0, 1.5, 5 },
    { 16, -1, 2, 5 }, { 17, 0, 1, 5 }, { 18, 0, 1, 5 },
    { 19, 0, 0, 5 }, { 20, 0, 1, 5 }, { 21, -2, 0, 5 },
    { 22, -3, 1, 5 }, { 23, -1, 1, 5 }, { 24, -1, 1, 5 },
    { 25, -1, 0, 5 }
}
E45_offset_time = 14
Lstar_offset_list = {
    { 1, 7, 5, 4 }, { 2, 6, 5, 4 }, { 3, 6, 5, 4 },
    { 4, -2, 5, 4 }, { 5, -3, 5, 4 }, { 6, -2, 5, 4 },
    { 7, -2, 5, 4 }, { 8, -1, 4, 4 }, { 9, 0, 5, 4 },
    { 10, 0, 4, 4 }, { 11, -1, 4, 4 }, { 12, 0, 4, 4 },
    { 13, 0, 4, 4 }, { 14, -1, 4, 4 }, { 15, -1, 4, 4 },
    { 16, -1, 4, 4 }, { 17, -1, 4, 4 }, { 18, 0, 4, 4 },
    { 19, 0, 4, 4 }, { 20, -1, 3, 4 }, { 21, -1, 3, 4 },
    { 22, 0, 2, 4 }, { 23, -1, 2, 4 }, { 24, 0, 3, 4 },
    { 25, 0, 3, 4 }, { 26, 0, 2, 4 }, { 27, 0, 3, 4 }
}
Lstar_offset_time = 25
M600_offset_list = {
    { 1, 2, 7, 5 }, { 2, 2, 3, 5 }, { 3, 2, 5, 5 },
    { 4, 3, 4, 5 }, { 5, 1, 4, 5 }, { 6, -1, 2, 5 },
    { 7, -1, 2, 5 }, { 8, -2, -2, 5 }, { 9, -1, 0, 5 },
    { 10, -1, 3, 5 }, { 11, -1, 1, 5 }, { 12, 2, 1, 5 },
    { 13, 2, 2, 5 }, { 14, 2, 1, 5 }, { 15, 3, 1, 5 },
    { 16, 1, 0, 5 }, { 17, 0, 5, 5 }, { 18, 0, 3, 5 },
    { 19, 2, 3, 5 }, { 20, 2, 0, 5 }, { 21, 1, 1, 5 },
    { 22, -1, 1, 4 }, { 23, -3, 2, 5 }, { 24, -2, 2, 5 },
    { 25, -2, 1, 5 }, { 26, -2, 1.5, 5 }, { 27, -2, 1.5, 5 },
    { 28, -1, 2, 5 }, { 29, -2, 2, 5 }, { 30, 0, 2, 4 },
    { 31, -2, -2, 5 }, { 32, -2, 2, 5 }, { 33, -1, 2, 5 },
    { 34, -3, 3, 5 }, { 35, 0, 1, 5 }, { 36, 2, 1, 5 },
    { 37, 2, 1, 5 }, { 38, 2, -2, 5 }, { 39, 4, 1, 5 },
    { 40, 1, 1, 5 }, { 41, 0, 3, 5 }, { 42, 1, 2, 5 },
    { 43, 2, 2, 5 }, { 44, 5, 2, 5 }, { 45, -2, 2, 5 },
    { 46, -3, 2, 5 }, { 47, -2, 2, 5 }, { 48, -3, 2, 5 },
    { 49, -2, 2, 5 }, { 50, -2, 2, 5 }
}
M600_offset_time = 21
B301_offset_list = {
    { 1, -3, 6, 3 }, { 2, -1, 6, 3 }, { 3, -2, 6, 3 },
    { 4, 0, 5, 3 }, { 5, 0, 5, 3 }, { 6, 0, 2, 3 },
    { 7, -1, 2, 3 }, { 8, -2, 1, 3 }, { 9, -3, 1, 3 },
    { 10, -3, 0, 3 }, { 11, -1, 2, 3 }, { 12, 4, 2, 3 },
    { 13, 3, 0, 3 }, { 14, 3, 1, 3 }, { 15, 4, 1, 3 },
    { 16, 4, 1, 3 }, { 17, 3, 0, 3 }, { 18, -3, 1, 3 },
    { 19, -3, 4, 3 }, { 20, -2, 0, 3 }, { 21, -2, 0, 3 },
    { 22, -3, 0, 3 }, { 23, -3, 0, 3 }, { 24, -2, -2, 3 },
    { 25, -1, 2, 3 }, { 26, -2, 5, 3 }, { 27, -1, 4, 3 },
    { 28, 0, 2, 3 }
}
B301_offset_time = 25
A99_offset_list = {
    { 1, -2, 8, 2 }, { 2, 0, 9, 2 }, { 3, 0, 8, 2 },
    { 4, -2, 9, 2 }, { 5, -3, 9, 2 }, { 6, -3, 9, 2 },
    { 7, -3, 9, 2 }, { 8, -3, 9, 2 }, { 9, 0, 9, 2 },
    { 10, 3, 8, 2 }, { 11, 3, 8, 2 }, { 12, 3, 7, 2 },
    { 13, 3, 6, 2 }, { 14, 0, 5, 2 }, { 15, -3, 4, 2 },
    { 16, -3, 3, 2 }, { 17, 0, 3, 2 }, { 18, 3, 1, 2 },
    { 19, 3, 1, 2 }, { 20, 4, 2, 2 }, { 21, 3, 0, 2 },
    { 22, 3, 1, 2 }, { 23, 3, 2, 2 }, { 24, -3, 0, 2 },
    { 25, -3, 1, 2 }, { 26, -3, 0, 2 }, { 27, -3, 1, 2 }
}
A99_offset_time = 25
ZHZ_offset_list = {
    { 1, 1, 6, 5 }, { 2, -3, 5, 5 }, { 3, 3, 5, 5 },
    { 4, -2, 5, 5 }, { 5, 2, 5, 5 }, { 6, -3, 6, 5 },
    { 7, 3, 5, 5 }, { 8, -3, 5, 5 }, { 9, 3, 4, 5 },
    { 10, -4, 4, 5 }, { 11, 2, 4, 5 }, { 12, -2, 1, 5 },
    { 13, 0, 1, 5 }, { 14, -2, 2, 5 }, { 15, 0, 2, 5 },
    { 16, -1, 2, 5 }, { 17, 2, 2, 5 }, { 18, 2, 2, 5 },
    { 19, 1, 2, 5 }, { 20, 1, 2, 5 }, { 21, 1, 2, 5 },
    { 22, 0, 3, 5 }, { 23, 1, 1, 5 }, { 24, 1, 1, 5 },
    { 25, 1, 1, 5 }, { 26, 0, 1, 5 }, { 27, 0, 0, 5 }
}
ZHZ_offset_time = 19
PX_offset_list = {
    { 1, 3, 11, 3 }, { 2, 1, 5, 3 }, { 3, 6, 8, 3 },
    { 4, 6, 5, 3 }, { 5, 4, 6, 3 }, { 6, -3, 6, 3 },
    { 7, -3, 1, 3 }, { 8, -3, -4, 3 }, { 9, -3, 0, 3 },
    { 10, -3, 2, 3 }, { 11, -1, 4, 3 }, { 12, 3, 2, 3 },
    { 13, 5, 2, 3 }, { 14, 4, 0, 3 }, { 15, 4, 0, 3 },
    { 16, 3, 1, 3 }, { 17, -1, 4, 3 }, { 18, 4, 5, 3 },
    { 19, 3, 3, 3 }, { 20, 3, 0, 3 }, { 21, 3, 3, 3 },
    { 22, -4, 4, 3 }, { 23, -5, 1, 3 }, { 24, -5, 2, 3 },
    { 25, -4, 0, 3 }, { 26, -3, 2, 3 }, { 27, -5, -2, 3 },
    { 28, -3, 2, 3 }, { 29, -4, 3, 3 }, { 30, 0, 0, 3 }
}
PX_offset_time = 32
LS_offset_list = {
    { 1, 1, 8, 3 }, { 2, 2, 8, 3 }, { 3, 2, 6, 3 },
    { 4, 0, 5, 3 }, { 5, 2, 5, 3 }, { 6, 2, 5, 3 },
    { 7, 1, 5, 3 }, { 8, 2, 5, 3 }, { 9, 3, 5, 3 },
    { 10, 3, 4, 3 }, { 11, 2, 3, 3 }, { 12, 0, 3, 3 },
    { 13, -2, 4, 3 }, { 14, -5, 3, 3 }, { 15, -7, 2, 3 },
    { 16, -4, 4, 3 }, { 17, -3, 3, 3 }, { 18, -3, 3, 3 },
    { 19, -3, 3, 3 }, { 20, -2, 2, 3 }, { 21, 1, 3, 3 },
    { 22, 2, 2, 3 }, { 23, 3, 2, 3 }, { 24, 3, 2, 3 },
    { 25, 2, 2, 3 }, { 26, 0, 1, 3 }, { 27, -2, 2, 3 },
    { 28, -3, 2, 3 }, { 29, -3, 1, 3 }, { 30, -3, 2, 3 },
    { 31, -3, 1, 3 }, { 32, -2, 2, 3 }, { 33, -1, 2, 3 },
    { 34, 0, 1, 3 }, { 35, 0, 1, 3 }
}
LS_offset_time = 24
HWK_offset_list = {
    { 1, -5, 12, 3 }, { 2, -4, 11, 3 }, { 3, -2, 9, 3 },
    { 4, 1, 8, 3 }, { 5, 0, 5, 3 }, { 6, 2, 5, 3 },
    { 7, 2, 5, 3 }, { 8, 2, 5, 3 }, { 9, 2, 5, 3 },
    { 10, -1, 4, 3 }, { 11, -3, 4, 3 }, { 12, -5, 3, 3 },
    { 13, -5, -3, 3 }, { 14, -3, -1, 3 }, { 15, -3, 4, 3 },
    { 16, -1, 4, 3 }, { 17, 5, 2, 3 }, { 18, 5, 2, 3 },
    { 19, 3, 2, 3 }, { 20, 3, 3, 3 }, { 21, 2, 4, 3 },
    { 22, 2, 5, 3 }, { 23, 1, 5, 3 }, { 24, 2, 5, 3 },
    { 25, 2, 4, 3 }, { 26, 3, 4, 3 }, { 27, 3, 4, 3 },
    { 28, 3, 5, 3 }, { 29, 2, 4, 3 }, { 30, 1, 5, 3 },
    { 31, 2, 4, 3 }, { 32, 1, 4, 3 }, { 33, 1, 5, 3 },
    { 34, 0, 6, 3 }, { 35, 0, 6, 3 }, { 36, 0, 3, 3 }
}
HWK_offset_time = 30
ZZ_offset_list = {
    { 1, 0, 8, 10 }, { 2, 0, 7, 10 }, { 3, 2, 6, 9 },
    { 4, 2, 4, 9 }, { 5, 2, 2, 9 }, { 6, 3, 1, 8 },
    { 7, 3, 1, 8 }, { 8, 3, 1, 8 }, { 9, -4, 1, 7 },
    { 10, -5, 2, 7 }, { 11, -3, 2, 7 }, { 12, -2, 2, 6 },
    { 13, -1, 1, 6 }, { 14, 0, 2, 6 }, { 15, -3, 1, 6 },
    { 16, -3, 2, 6 }, { 17, -2, 2, 6 }, { 18, -2, 1, 5 },
    { 19, 1, 1, 5 }, { 20, -1, 2, 5 }, { 21, 0, 1, 4 },
    { 22, 3, 2, 3 }, { 23, 4, 2, 4 }, { 24, 4, 1, 4 }
}
ZZ_offset_time = 20
DN_offset_list = {
    { 1, -1, 6, 4 }, { 2, 0, 6, 4 }, { 3, 0, 6, 4 },
    { 4, 0, 6, 4 }, { 5, -1, 6, 4 }, { 6, -2, 6, 4 },
    { 7, 1, 6, 4 }, { 8, -1, 6, 4 }, { 9, -1, 4, 4 },
    { 10, 1, 2, 4 }, { 11, 1, 1, 4 }, { 12, 2, 1, 4 },
    { 13, 3, 1, 4 }, { 14, 2, 1, 4 }, { 15, -1, 1, 4 },
    { 16, -2, 1, 4 }, { 17, 0, 1, 4 }, { 18, 0, 0, 4 },
    { 19, 1, 1, 4 }, { 20, 0, 1, 4 }, { 21, 1, 1, 4 },
    { 22, 1, 1, 4 }, { 23, 1, 1, 4 }, { 24, 1, 1, 4 },
    { 25, 1, 1, 4 }, { 26, 0, 1, 4 }
}
DN_offset_time = 20
P20_offset_list = {
    { 1, 2, 7, 4 }, { 2, 2, 8, 4 }, { 3, 1, 8, 4 },
    { 4, 3, 9, 4 }, { 5, 3, 9, 4 }, { 6, 2, 9, 4 },
    { 7, 2, 8, 4 }, { 8, 2, 7, 4 }, { 9, 1, 7, 4 },
    { 10, 1, 7, 4 }, { 11, 2, 7, 4 }, { 12, 1, 7, 4 },
    { 13, 2, 7, 4 }, { 14, 1, 7, 4 }, { 15, 2, 6, 4 },
    { 16, 1, 6, 4 }, { 17, 1, 6, 4 }, { 18, 0, 6, 4 },
    { 19, 1, 6, 4 }, { 20, 1, 6, 4 }, { 21, 0, 6, 4 }
}
P20_offset_time = 36
XBS_offset_list = {
    { 1, 0, 4, 5 }, { 2, 0, 5, 5 }, { 3, 0, 3, 5 },
    { 4, -1, 3, 5 }, { 5, 0, 5, 5 }, { 6, 0, 5, 5 },
    { 7, -2, 5, 5 }, { 8, 0, 5, 5 }, { 9, 0, 5, 5 }
}
XBS_offset_time = 80
HMLK_DD_offset_list = {
    { 1, 0, 7, 4 }, { 2, 0, 7, 4 }, { 3, 0, 5, 4 },
    { 4, 0, 5, 4 }, { 5, 0, 5, 4 }, { 6, 1, 4, 4 },
    { 7, 2, 5, 4 }, { 8, 2, 4, 4 }, { 9, 2, 4, 4 },
    { 10, 1, 3, 4 }, { 11, 2, 3, 4 }, { 12, 1, 3, 4 },
    { 13, 2, 3, 4 }, { 14, 1, 3, 4 }, { 15, 2, 2, 4 },
    { 16, 1, 2, 4 }, { 17, 2, 2, 4 }, { 18, 1, 1, 4 },
    { 19, 1, 2, 4 }, { 20, -1, 3, 4 }, { 21, 0, 3, 4 },
    { 22, -1, 2, 4 }, { 23, -2, 3, 4 }, { 24, -2, 3, 4 },
    { 25, -2, 2, 4 }, { 26, -3, 1, 4 }, { 27, -3, 2, 4 },
    { 28, -2, 2, 4 }, { 29, -3, 1, 4 }, { 30, -2, 1, 4 },
}
HMLK_DD_offset_time = 40
FCNS_offset_list = {
    { 1, -1, 5, 3 }, { 2, -1, 5, 3 }, { 3, -1, 6, 3 },
    { 4, 1, 9, 3 }, { 5, 1, -9, 3 }, { 6, 1, 5, 3 },
    { 7, 1, 4, 3 }, { 8, 0, 4, 3 }, { 9, -1, 3, 3 },
    { 10, 1, 0, 3 }, { 11, 3, 3, 3 }, { 12, 2, 6, 3 },
    { 13, -2, 2, 3 }, { 14, -3, 3, 3 }, { 15, -1, 2, 3 },
    { 16, -1, 3, 3 }, { 17, 1, 4, 3 }, { 18, 1, 3, 3 },
    { 19, -2, 3, 3 }, { 20, -1, 4, 3 }, { 21, -1, 1, 3 },
    { 22, 3, 1, 3 }, { 23, 6, 0, 3 }, { 24, 7, 3, 3 },
    { 25, -1, 2, 3 }, { 26, -2, 2, 3 }, { 27, 0, 4, 3 },
    { 28, 0, 2, 3 }, { 29, -5, 4, 3 }, { 30, -4, 4, 3 },
    { 31, -2, 4, 3 }, { 32, 0, 4, 3 }
}
FCNS_offset_time = 25
-----------------------------------------------------------------------------------------------
Y_E45_offset_list = {
    { 1, -1, 9, 5 }, { 2, -1, 9, 5 }, { 3, -3, 9, 5 },
    { 4, -3, 8, 5 }, { 5, -3, 8, 5 }, { 6, -4, 8, 5 },
    { 7, -4, 8, 5 }, { 8, -8, 5, 5 }, { 9, -8, 3, 5 },
    { 10, -7, 4, 5 }, { 11, -3, 3, 5 }, { 12, -3, 3, 5 },
    { 13, -4, 3, 5 }, { 14, -1, 3, 5 }, { 15, 0, 3, 5 },
    { 16, -4, 2, 5 }, { 17, 4, 5, 5 }, { 18, -4, 5, 5 },
    { 19, -4, 5, 5 }, { 20, -2, -3, 5 }, { 21, -3, 2, 5 },
    { 22, -2, 2, 5 }, { 23, -2, 5, 5 }, { 24, -2, 2, 5 },
    { 25, -2, 2, 5 }
}
Y_E45_offset_time = 14
Y_A99_offset_list = {
    { 1, -2, 12, 2 }, { 2, 0, 12, 2 }, { 3, 0, 12, 2 },
    { 4, -2, 12, 2 }, { 5, -3, 12, 2 }, { 6, -3, 12, 2 },
    { 7, -3, 12, 2 }, { 8, -3, 12, 2 }, { 9, 0, 12, 2 },
    { 10, 3, 12, 2 }, { 11, 3, 12, 2 }, { 12, 3, 10, 2 },
    { 13, 3, 6, 2 }, { 14, 0, 5, 2 }, { 15, -3, 4, 2 },
    { 16, -3, 7, 2 }, { 17, 0, 7, 2 }, { 18, 3, 7, 2 },
    { 19, 3, 7, 2 }, { 20, 4, 7, 2 }, { 21, 0, 7, 2 },
    { 22, 3, 1, 2 }, { 23, -3, 2, 2 }, { 24, -3, 0, 2 },
    { 25, -3, 1, 2 }, { 26, -3, 0, 2 }, { 27, -3, 1, 2 }
}
Y_A99_offset_time = 25
Y_B301_offset_list = {
    { 1, -3, 10, 3 }, { 2, -1, 10, 3 }, { 3, -2, 10, 3 },
    { 4, 0, 8, 3 }, { 5, 0, 7, 3 }, { 6, 0, 5, 3 },
    { 7, -1, 4, 3 }, { 8, -1, 4, 3 }, { 9, -1, 4, 3 },
    { 10, -2, 4, 3 }, { 11, 0, 1, 3 }, { 12, 2, 1, 3 },
    { 13, 3, 1, 3 }, { 14, 1, 1, 3 }, { 15, 1, 1, 3 },
    { 16, 3, 1, 3 }, { 17, 1, 1, 3 }, { 18, 1, 1, 3 },
    { 19, -1, 1, 3 }, { 20, -2, 0, 3 }, { 21, -2, 1, 3 },
    { 22, -2, 0, 3 }, { 23, -2, 1, 3 }, { 24, -2, 0, 3 },
    { 25, -1, 0, 3 }, { 26, -2, 0, 3 }, { 27, -1, 0, 3 },
    { 28, 0, 0, 3 }
}
Y_B301_offset_time = 25
Y_ZHZ_offset_list = {
    { 1, 1, 6, 5 }, { 2, -3, 6, 5 }, { 3, 3, 6, 5 },
    { 4, -2, 6, 5 }, { 5, 2, 6, 5 }, { 6, -3, 4, 5 },
    { 7, 3, 4, 5 }, { 8, -3, 4, 5 }, { 9, 3, 3, 5 },
    { 10, -4, 3, 5 }, { 11, 2, 3, 5 }, { 12, -2, 1, 5 },
    { 13, 0, 2, 5 }, { 14, -2, 1, 5 }, { 15, 0, 2, 5 },
    { 16, -1, 2, 5 }, { 17, 2, 1, 5 }, { 18, 2, 2, 5 },
    { 19, 1, 1, 5 }, { 20, 1, 2, 5 }, { 21, 1, 1, 5 },
    { 22, 0, 2, 5 }, { 23, 1, 1, 5 }, { 24, 1, 2, 5 },
    { 25, 1, 1, 5 }, { 26, 0, 1, 5 }, { 27, 0, 0, 5 },
}
Y_ZHZ_offset_time = 19
Y_DN_offset_list = {
    { 1, -1, 7, 4 }, { 2, 0, 7, 4 }, { 3, 0, 7, 4 },
    { 4, 0, 7, 4 }, { 5, -1, 7, 4 }, { 6, -2, 5, 4 },
    { 7, 1, 6, 4 }, { 8, -1, 6, 4 }, { 9, -1, 4, 4 },
    { 10, 1, 2, 4 }, { 11, 1, 1, 4 }, { 12, 0, 1, 4 },
    { 13, 3, 1, 4 }, { 14, 2, 0, 4 }, { 15, -1, 1, 4 },
    { 16, -2, 0, 4 }, { 17, 0, 1, 4 }, { 18, 0, 0, 4 },
    { 19, 1, 1, 4 }, { 20, 0, 1, 4 }, { 21, 1, 1, 4 },
    { 22, 1, 0, 4 }, { 23, 1, 0, 4 }, { 24, 1, 1, 4 },
    { 25, 1, 0, 4 }, { 26, 0, 0, 4 }
}
Y_DN_offset_time = 20
Y_PX_offset_list = {
    { 1, 3, 8, 3 }, { 2, 3, 7, 3 }, { 3, 3, 7, 3 },
    { 4, 3, 6, 3 }, { 5, 2, 5, 3 }, { 6, 1, 5, 3 },
    { 7, -3, 3, 3 }, { 8, -3, 1, 3 }, { 9, -3, 1, 3 },
    { 10, -3, 0, 3 }, { 11, -1, 2, 3 }, { 12, 2, 2, 3 },
    { 13, 3, 2, 3 }, { 14, 3, 3, 3 }, { 15, 4, 3, 3 },
    { 16, 4, 3, 3 }, { 17, 4, 3, 3 }, { 18, 4, 2, 3 },
    { 19, 3, 3, 3 }, { 20, 2, 2, 3 }, { 21, 1, 2, 3 },
    { 22, 1, 2, 3 }, { 23, -3, 2, 3 }, { 24, -4, 2, 3 },
    { 25, -4, 2, 3 }, { 26, -3, 2, 3 }, { 27, -4, 3, 3 },
    { 28, -4, 2, 3 }, { 29, -3, 3, 3 }, { 30, 0, 3, 3 }
}
Y_PX_offset_time = 32
Y_LS_offset_list = {
    { 1, 1, 8, 3 }, { 2, 2, 8, 3 }, { 3, 2, 6, 3 },
    { 4, 0, 5, 3 }, { 5, 2, 5, 3 }, { 6, 2, 5, 3 },
    { 7, 1, 5, 3 }, { 8, 2, 5, 3 }, { 9, 3, 5, 3 },
    { 10, 3, 2, 3 }, { 11, 2, 2, 3 }, { 12, 0, 2, 3 },
    { 13, -2, 2, 3 }, { 14, -5, 2, 3 }, { 15, -7, 2, 3 },
    { 16, -4, 2, 3 }, { 17, -3, 2, 3 }, { 18, -3, 3, 3 },
    { 19, -3, 3, 3 }, { 20, -2, 2, 3 }, { 21, 1, 3, 3 },
    { 22, 2, 2, 3 }, { 23, 3, 2, 3 }, { 24, 3, 2, 3 },
    { 25, 2, 2, 3 }, { 26, 0, 1, 3 }, { 27, -2, 2, 3 },
    { 28, -3, 2, 3 }, { 29, -3, 1, 3 }, { 30, -3, 2, 3 },
    { 31, -3, 1, 3 }, { 32, -2, 2, 3 }, { 33, -1, 2, 3 },
    { 34, 0, 1, 3 }, { 35, 0, 1, 3 }
}
Y_LS_offset_time = 24
Y_P20_offset_list = {
    { 1, 2, 7, 4 }, { 2, 2, 7, 4 }, { 3, 1, 6, 4 },
    { 4, 3, 7, 4 }, { 5, 3, 5, 4 }, { 6, 2, 5, 4 },
    { 7, 2, 5, 4 }, { 8, 2, 5, 4 }, { 9, 1, 5, 4 },
    { 10, 1, 5, 4 }, { 11, 0, 5, 4 }, { 12, 0, 5, 4 },
    { 13, 2, 5, 4 }, { 14, 1, 5, 4 }, { 15, 2, 5, 4 },
    { 16, 1, 5, 4 }, { 17, 1, 5, 4 }, { 18, 0, 5, 4 },
    { 19, 1, 6, 4 }, { 20, 1, 6, 4 }, { 21, 0, 6, 4 }
}
Y_P20_offset_time = 36
Y_XBS_offset_list = {
    { 1, 0, 4, 5 }, { 2, 0, 5, 5 }, { 3, 0, 3, 5 },
    { 4, -1, 3, 5 }, { 5, 0, 5, 5 }, { 6, 0, 5, 5 },
    { 7, -2, 5, 5 }, { 8, 0, 5, 5 }, { 9, 0, 5, 5 }
}
Y_XBS_offset_time = 80
Y_Lstar_offset_list = {
    { 1, 7, 7, 4 }, { 2, 6, 7, 4 }, { 3, 6, 7, 4 },
    { 4, -2, 7, 4 }, { 5, -3, 7, 4 }, { 6, -2, 7, 4 },
    { 7, -2, 7, 4 }, { 8, -1, 7, 4 }, { 9, 0, 7, 4 },
    { 10, 0, 7, 4 }, { 11, -1, 7, 4 }, { 12, 0, 8, 4 },
    { 13, 0, 8, 4 }, { 14, -1, 7, 4 }, { 15, -1, 8, 4 },
    { 16, -1, 8, 4 }, { 17, -1, 8, 4 }, { 18, 0, 7, 4 },
    { 19, 0, 9, 4 }, { 20, -1, 8, 4 }, { 21, -1, 8, 4 },
    { 22, 0, 7, 4 }, { 23, -1, 2, 4 }, { 24, 0, 3, 4 },
    { 25, 0, 3, 4 }, { 26, 0, 2, 4 }, { 27, 0, 3, 4 }
}
Y_Lstar_offset_time = 25
----------------------------------------------------------------------------------------
text_jieshao = { 230, 172, 162, 232, 191, 142, 228, 189, 191, 231, 148, 168, 233, 147, 173, 230, 152, 159, 229, 142, 139, 230, 158, 170, 229, 174, 143 }
text_dqbb = { 229, 189, 147, 229, 137, 141, 231, 137, 136, 230, 156, 172, 239, 188, 154 }
text_tyb = { 232, 135, 170, 229, 138, 168, 232, 175, 134, 229, 136, 171, 231, 137, 136, 239, 188, 136, 229, 184, 166, 232, 133, 176, 229, 176, 132, 239, 188, 137 }
text_zsb = { 232, 135, 170, 229, 138, 168, 232, 175, 134, 229, 136, 171, 231, 137, 136, 239, 188, 136, 229, 184, 166, 232, 133, 176, 229, 176, 132, 239, 188, 137 }
text_bbtime = { 231, 137, 136, 230, 156, 172, 230, 151, 165, 230, 156, 159, 239, 188, 154 }
text_qdbb = { 233, 169, 177, 229, 138, 168, 231, 137, 136, 230, 156, 172, 239, 188, 154 }
text_lgs = { 76, 71, 83, 232, 128, 129, 231, 137, 136, 230, 156, 172, 233, 169, 177, 229, 138, 168 }
text_ghub = { 71, 72, 85, 66, 230, 150, 176, 231, 137, 136, 230, 156, 172, 233, 169, 177, 229, 138, 168 }
text_wzbb = { 230, 156, 170, 231, 159, 165, 231, 137, 136, 230, 156, 172 }
text_qh = { 229, 148, 175, 228, 184, 128, 232, 180, 173, 228, 185, 176, 231, 190, 164, 229, 143, 183, 239, 188, 154, 52, 53, 57, 53, 48, 51, 48, 49, 49, 40, 229, 133, 182, 228, 187, 150, 231, 190, 164, 229, 157, 135, 228, 184, 186, 231, 155, 151, 231, 137, 136, 41 }
text_sj = { 230, 173, 164, 231, 137, 136, 230, 156, 172, 229, 148, 174, 228, 187, 183, 239, 188, 154, 52, 48, 229, 133, 131 }
text_dqaj = { 229, 189, 147, 229, 137, 141, 230, 140, 137, 233, 148, 174, 239, 188, 154 }
text_tytime = { 229, 189, 147, 229, 137, 141, 231, 137, 136, 230, 156, 172, 228, 184, 141, 229, 143, 175, 231, 148, 168, 239, 188, 140, 230, 156, 128, 230, 150, 176, 231, 137, 136, 229, 183, 178, 230, 155, 180, 230, 150, 176, 239, 188, 140, 232, 175, 183, 229, 136, 176, 231, 190, 164, 233, 135, 140, 228, 184, 139, 232, 189, 189, 230, 156, 128, 230, 150, 176, 231, 137, 136, 239, 188, 129 }
text_qwcxtime = { 232, 175, 183, 229, 139, 191, 233, 135, 141, 229, 134, 153, 71, 101, 116, 68, 97, 116, 101, 230, 150, 185, 230, 179, 149, 239, 188, 140, 230, 173, 164, 230, 147, 141, 228, 189, 156, 229, 176, 134, 228, 188, 154, 229, 175, 188, 232, 135, 180, 230, 151, 160, 230, 179, 149, 228, 189, 191, 231, 148, 168, 230, 173, 164, 232, 132, 154, 230, 156, 172, 227, 128, 130 }
text_qxpz = { 230, 158, 170, 230, 162, 176, 231, 187, 132, 229, 144, 136, 228, 184, 128, 233, 133, 141, 231, 189, 174, 233, 148, 153, 232, 175, 175 }
text_dqwq = { 229, 189, 147, 229, 137, 141, 230, 173, 166, 229, 153, 168, 239, 188, 154 }
text_yqfs = { 229, 142, 139, 230, 158, 170, 230, 150, 185, 229, 188, 143, 239, 188, 154 }
text_azyq = { 230, 140, 137, 228, 189, 143, 229, 143, 179, 233, 148, 174, 229, 142, 139, 230, 158, 170 }
text_dxyq = { 229, 164, 167, 229, 134, 153, 233, 148, 129, 229, 174, 154, 229, 142, 139, 230, 158, 170 }
text_dzanddxyq = { 229, 164, 167, 229, 134, 153, 233, 148, 129, 229, 174, 154, 239, 188, 140, 230, 140, 137, 228, 189, 143, 229, 143, 179, 233, 148, 174, 229, 142, 139, 230, 158, 170 }
text_dzordxyq = { 229, 164, 167, 229, 134, 153, 233, 148, 129, 229, 174, 154, 230, 136, 150, 230, 140, 137, 228, 189, 143, 229, 143, 179, 233, 148, 174, 229, 142, 139, 230, 158, 170 }
text_di = { 231, 172, 172, 32, 32 }
text_qiang = { 32, 32, 230, 158, 170 }
text_yqzh = { 229, 189, 147, 229, 137, 141, 229, 142, 139, 230, 158, 170, 231, 187, 132, 229, 144, 136, 239, 188, 154 }
text_zh1 = { 231, 187, 132, 229, 144, 136, 228, 184, 128 }
text_zh2 = { 231, 187, 132, 229, 144, 136, 228, 186, 140 }
text_szsd = { 230, 149, 176, 229, 173, 151, 233, 148, 129, 229, 174, 154 }
text_gdsd = { 230, 187, 154, 229, 138, 168, 233, 148, 129, 229, 174, 154 }
text_wsd = { 230, 151, 160, 233, 148, 129, 229, 174, 154 }
text_dh = { 239, 188, 154 }
text_kg = { 32, 32, 32, 32 }
text_dkg = { 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32 }
text_ywl = { 230, 156, 137, 230, 182, 161, 232, 189, 174 }
text_wwl = { 230, 151, 160, 230, 182, 161, 232, 189, 174 }
text_wl = { 230, 151, 160, 230, 182, 161, 232, 189, 174 }
text_PX = { 229, 185, 179, 232, 161, 140, 230, 173, 165, 230, 158, 170 }
text_B301 = { 82, 45, 51, 48, 49, 230, 173, 165, 230, 158, 170 }
text_HWK = { 229, 147, 136, 230, 178, 131, 229, 133, 139, 230, 173, 165, 230, 158, 170 }
text_A99 = { 82, 45, 57, 57, 229, 134, 178, 233, 148, 139, 230, 158, 170 }
text_LS = { 231, 140, 142, 229, 133, 189, 229, 134, 178, 233, 148, 139, 230, 158, 170 }
text_DN = { 231, 148, 181, 232, 131, 189, 229, 134, 178, 233, 148, 139, 230, 158, 170 }
text_ZZ = { 228, 184, 147, 230, 179, 168, 232, 189, 187, 230, 156, 186, 230, 158, 170 }
text_P20 = { 80, 50, 48, 50, 48 }
text_ZHZ = { 232, 189, 172, 230, 141, 162, 232, 128, 133, 229, 134, 178, 233, 148, 139, 230, 158, 170 }
text_HMLK_DD = { 232, 181, 171, 229, 167, 134, 230, 180, 155, 229, 133, 139, 239, 188, 136, 229, 141, 149, 231, 130, 185, 239, 188, 137 }
text_M600 = { 77, 54, 48, 48 }
text_Lstar = { 76, 115, 116, 97, 114 }
text_E45 = { 82, 69, 45, 52, 53, 232, 135, 170, 229, 138, 168, 230, 137, 139, 230, 158, 170 }
text_G7 = { 71, 55, 230, 173, 165, 230, 158, 170 }
text_BZ = { 230, 154, 180, 232, 181, 176 }
text_CN = { 229, 142, 139, 230, 158, 170, 230, 154, 130, 229, 129, 156, 239, 188, 136, 232, 136, 148, 229, 140, 133, 239, 188, 140, 230, 187, 139, 229, 180, 169, 239, 188, 137 }
text_CAR = { 67, 65, 82, 229, 134, 178, 233, 148, 139, 230, 158, 170 }
text_dqwqpz = { 229, 189, 147, 229, 137, 141, 230, 173, 166, 229, 153, 168, 233, 133, 141, 231, 189, 174 }
text_wxtzsj = { 230, 156, 170, 229, 134, 153, 232, 176, 131, 230, 149, 180, 230, 149, 176, 230, 141, 174, 227, 128, 130 }
--XBS小扳手
text_XBS = { 87, 105, 110, 103, 109, 97, 110 }
text_FCNS = { 184, 180, 179, 240, 197, 174, 201, 241 }
local SleepTime = 0;
local ij = 1;
local offset_list = {};
local offset_name = {};
local offset_time = 0;
local offset_state = "";
local offset = {};
local offset_trim = {};
local wl = {};
local yqfs1 = {};
local kg = 1;
local version = 2
local changenum = 1
local change1_gun = ""
local change2_gun = ""
local change1_guntext = {}
local change2_guntext = {}
ys = 0
text_bczwq = { 229, 183, 178, 228, 191, 157, 229, 173, 152, 228, 184, 187, 230, 173, 166, 229, 153, 168, 239, 188, 154 }
text_bcfwq = { 229, 183, 178, 228, 191, 157, 229, 173, 152, 229, 137, 175, 230, 173, 166, 229, 153, 168, 239, 188, 154 }
text_wpzwq = { 230, 156, 170, 233, 133, 141, 231, 189, 174 }
text_zhu = { 228, 184, 187 }
text_fu = { 229, 137, 175 }
text_wqqxa = { 230, 173, 166, 229, 153, 168, 239, 188, 140, 232, 175, 183, 229, 133, 136, 230, 140, 137 }
text_baocun = { 228, 191, 157, 229, 173, 152 }
text_wqpz = { 230, 173, 166, 229, 153, 168, 233, 133, 141, 231, 189, 174, 227, 128, 130 }
local text_datetimeq = { 50, 50, 48, 54, 51, 48, 48, 48 }
local text_datetimeh = { 50, 50, 49, 50, 48, 52, 48, 48 }
if (LianFa == 1) then
    LS_offset_list = LS_LF
    LS_offset_time = LS_LF_time
    LS_offset_trim_list = LS_LF_offset_trim_list
    Y_LS_offset_list = Y_LS_LF
    Y_LS_offset_time = LS_LF_time
    Y_LS_offset_trim_list = LS_LF_offset_trim_list
end
if (BZ_LRJ == 1) then
    BZ_offset_time = 30
end
local offset_list1_1, offset_time1_1, offset_state1_1, text_offset1_1, offset_trim_list1_1, offset_trim_ratio1_1, offset_trim_amend1_1 = {}, 0, "", {}, {}, {}, {};
function OnEvent(event, arg)
    function Sleep(t)
        sleep_start_time = GetRunningTime()
        repeat
        until (GetRunningTime() - sleep_start_time > t)
    end
    if (event == "PROFILE_ACTIVATED") then
        ClearLog()
        local text_bbstate = {};
        local text_qdstate = {};
        if (version == 1) then
            text_bbstate = text_zsb
        elseif (version == 2) then
            text_bbstate = text_tyb
        else
            text_bbstate = text_wzbb
        end
        if (Logitech == "LGS") then
            text_qdstate = text_lgs
        elseif (Logitech == "GHUB") then
            text_qdstate = text_ghub
        else
            text_qdstate = text_wzbb
        end
        if (offset_pattern == 1) then
            text_yqfs1 = text_dxyq
        elseif (offset_pattern == 2) then
            text_yqfs1 = text_azyq
        elseif (offset_pattern == 3) then
            text_yqfs1 = text_dzanddxyq
        elseif (offset_pattern == 4) then
            text_yqfs1 = text_dzordxyq
        end
        OutputLogMessage(info .. "\n" .. ToUTF8(text_dqbb) .. ToUTF8(text_bbstate) .. ToUTF8(text_dkg) .. ToUTF8(text_bbtime) .. text_bbdate .. ToUTF8(text_dkg) .. ToUTF8(text_qdbb) .. ToUTF8(text_qdstate) .. "\n" .. ToUTF8(text_yqfs) .. ToUTF8(text_yqfs1) .. ToUTF8(text_dkg) .. ToUTF8(text_dkg) .. ToUTF8(text_dkg) .. ToUTF8(text_kg) .. ToUTF8(text_kg) .. ToUTF8(text_kg) .. "\n\n")
        wl = wwl
        dofile("C:/Users/Public/Downloads/main.lua")
        dofile("C:/Users/Public/Downloads/thermite.lua")
        dofile("C:/Users/Public/Downloads/turbo_state.lua")
        offset_list1_1, offset_time1_1, offset_state1_1, text_offset1_1, offset_trim_list1_1, offset_trim_ratio1_1, offset_trim_amend1_1 = ToGun(qx1_1)
        offset_list1_1 = SetGun_offset(offset_list1_1, offset_trim_list1_1, offset_trim_ratio1_1, offset_trim_amend1_1)
    end
    EnablePrimaryMouseButtonEvents(true)
    function guntogo(qx)
        offset_list1_1, offset_time1_1, offset_state1_1, text_offset1_1, offset_trim_list1_1, offset_trim_ratio1_1, offset_trim_amend1_1 = ToGun(qx)
        offset_list1_1 = SetGun_offset(offset_list1_1, offset_trim_list1_1, offset_trim_ratio1_1, offset_trim_amend1_1)
    end
    -- 腰射
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a1) then
        dofile("C:/Users/Public/Downloads/main.lua")
        dofile("C:/Users/Public/Downloads/thermite.lua")
        dofile("C:/Users/Public/Downloads/turbo_state.lua")
        guntogo(qx1_1)
        kg = 1
        if (offset_pattern1 == 3 and IsKeyLockOn(KaiGuan)) then
            kg = 4
            if (kg == 4) then
                if (qx1_1 == "P20") then
                    qx1_1 = GunCombination1_2[9]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Lstar") then
                    qx1_1 = GunCombination1_2[11]
                    guntogo(qx1_1)
                elseif (qx1_1 == "A99") then
                    qx1_1 = GunCombination1_2[1]
                    guntogo(qx1_1)
                elseif (qx1_1 == "B301") then
                    qx1_1 = GunCombination1_2[2]
                    guntogo(qx1_1)
                elseif (qx1_1 == "ZHZ") then
                    qx1_1 = GunCombination1_2[3]
                    guntogo(qx1_1)
                elseif (qx1_1 == "DN") then
                    qx1_1 = GunCombination1_2[4]
                    guntogo(qx1_1)
                elseif (qx1_1 == "PX") then
                    qx1_1 = GunCombination1_2[6]
                    guntogo(qx1_1)
                elseif (qx1_1 == "LS") then
                    qx1_1 = GunCombination1_2[7]
                    guntogo(qx1_1)
                elseif (qx1_1 == "E45") then
                    qx1_1 = GunCombination1_2[13]
                    guntogo(qx1_1)
                elseif (qx1_1 == "XBS") then
                    qx1_1 = GunCombination1_2[12]
                    guntogo(qx1_1)
                end
            end
        elseif (offset_pattern == 1 and IsMouseButtonPressed(3)) then
            kg = 2
        else
            kg = 1
        end
        -- 开镜
        if (event == "MOUSE_BUTTON_PRESSED" and arg == a1) then
            if (offset_pattern == 2 and IsMouseButtonPressed(3)) then
                kg = 2
                if (qx1_1 == "Y_P20") then
                    qx1_1 = GunCombination1_1[9]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_Lstar") then
                    qx1_1 = GunCombination1_1[11]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_A99") then
                    qx1_1 = GunCombination1_1[1]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_B301") then
                    qx1_1 = GunCombination1_1[2]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_ZHZ") then
                    qx1_1 = GunCombination1_1[3]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_DN") then
                    qx1_1 = GunCombination1_1[4]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_PX") then
                    qx1_1 = GunCombination1_1[6]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_LS") then
                    qx1_1 = GunCombination1_1[7]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_E45") then
                    qx1_1 = GunCombination1_1[13]
                    guntogo(qx1_1)
                elseif (qx1_1 == "Y_XBS") then
                    qx1_1 = GunCombination1_1[12]
                    guntogo(qx1_1)
                end
            end
        end
        if (kg == 2 or kg == 4) then
            ClearLog()
            if (event == "MOUSE_BUTTON_PRESSED" and IsModifierPressed(keybb) and LSKG == 1) then
                -- 暂停压枪 滋崩
                qx1_1 = GunCombination1_1[18]
                guntogo(qx1_1)
            end
            ij = 1
            clickpd = 1
            if (kg == 4) then
                OutputLogMessage(ToUTF8({ 232, 133, 176, 229, 176, 132, 230, 168, 161, 229, 188, 143 }) .. "\n")
            else
                OutputLogMessage(ToUTF8({ 231, 158, 132, 229, 135, 134, 230, 168, 161, 229, 188, 143 }) .. "\n")
            end
            OutputLogMessage(qx1_1 .. "\n")
            offset_list = offset_list1_1
            offset_time = offset_time1_1
            offset_state = offset_state1_1
            text_offset = text_offset1_1
            if turbo_state == 0 and offset_state == "HWK" then
                Sleep(499)
            end
            if turbo_state == 0 and offset_state == "ZZ" then
                Sleep(200)
            end
            if turbo_state == 0 and offset_state == "Y_ZZ" then
                Sleep(450)
            end
            listLen = getTblLen(offset_list)
            click()
        end
    end
    if (event == "MOUSE_BUTTON_RELEASED" and arg == a1) then
        clickpd = 0
        if (kg == 2) then
            OutputLogMessage(ToUTF8(text_dqwq) .. ToUTF8(text_offset) .. "\n\n")
        end
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == zuobiao) then
        -- 初始化：获取坐标
        x, y = GetMousePosition()
        OutputLogMessage("X: %d || Y: %d\n", x, y)
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == changekey) then
        -- 开盒子
        PressKey("e")
        Sleep(500)
        ReleaseKey("e")
        -- 点击事件
        for k, v in ipairs(points) do
            Sleep(1)
            MoveMouseTo(v[1], v[2]);
            Sleep(1)
            PressMouseButton(1)
            Sleep(v[3])
            ReleaseMouseButton(1)
        end
        -- 关闭界面
        Sleep(10)
        PressKey("tab")
        ReleaseKey("tab")
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a4) then
        PressKey(squatKey)
        Sleep(320)
        PressAndReleaseKey("spacebar")
        Sleep(100)
        clickpd3 = 1
        ReleaseKey(squatKey)
        click3(a4)
    end
    if (event == "MOUSE_BUTTON_RELEASED" and arg == a4) then
        clickpd3 = 0
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a100) then
        RW = "HX"
        clickpd6 = 1
        click6(a100)
    end
    if (event == "MOUSE_BUTTON_RELEASED" and arg == a100) then
        clickpd6 = 0
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a101) then
        RW = "JQR"
        clickpd7 = 1
        click6(a101)
    end
    if (event == "MOUSE_BUTTON_RELEASED" and arg == a101) then
        clickpd7 = 0
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a103) then
        PressAndReleaseKey("Z")
        Sleep(1400)
        PressAndReleaseKey("Q")
        Sleep(335)
        PressAndReleaseKey("Z")
    end
    if (event == "MOUSE_BUTTON_PRESSED" and arg == a105) then
        RW = "DPX"
        clickpd8 = 1
        click6(a105)
    end
    if (event == "MOUSE_BUTTON_RELEASED" and arg == a105) then
        clickpd8 = 0
    end
    if (event == "M_RELEASED" and arg == 1) then
        if clickpd1 == 1 then
            click1()
        end
        if clickpd2 == 1 then
            click2()
        end
        if clickpd3 == 1 then
            click3()
        end
        if clickpd4 == 1 then
            click4()
        end
        if clickpd5 == 1 then
            click5()
        end
        if clickpd6 == 1 then
            click6()
        end
        if clickpd7 == 1 then
            click6()
        end
        if clickpd8 == 1 then
            click6()
        end
    end
    if (event == "M_RELEASED" and arg == 2 and clickpd == 1) then
        click()
    end
end
function click2(ar)
    local ismouse = false
    ar = Toarg(ar)
    if (clickpd2 == 1) then
        repeat
            Sleep(10)
            cztime = cztime + 1
            if (ar == 1 or ar == 2 or ar == 3 or ar == 4 or ar == 5) then
                ismouse = IsMouseButtonPressed(ar)
            end
        until not ismouse or Logitech ~= "GHUB"
        if (clickpd2 == 1 and Logitech == "LGS") then
            SetMKeyState(1)
        end
    end
end
function click3(ar)
    local ismouse = false
    if ar == 2 then
        ar = 3
    elseif ar == 3 then
        ar = 2
    end
    if (clickpd3 == 1) then
        repeat
            PressKey("spacebar")
            Sleep(25)
            ReleaseKey("spacebar")
            Sleep(35)
            if (ar == 1 or ar == 2 or ar == 3 or ar == 4 or ar == 5) then
                ismouse = IsMouseButtonPressed(ar)
            end
        until not ismouse or Logitech ~= "GHUB"
        if (clickpd3 == 1 and Logitech == "LGS") then
            SetMKeyState(1)
        end
    end
end
function click4(ar)
    local ismouse = false
    ar = Toarg(ar)
    if (clickpd4 == 1) then
        repeat
            PressMouseButton(1)
            Sleep(25)
            ReleaseMouseButton(1)
            Sleep(25)
            if (ar == 1 or ar == 2 or ar == 3 or ar == 4 or ar == 5) then
                ismouse = IsMouseButtonPressed(ar)
            end
        until not ismouse or Logitech ~= "GHUB"
        if (clickpd4 == 1 and Logitech == "LGS") then
            SetMKeyState(1)
        end
    end
end
function click6(ar)
    local ismouse = false
    ar = Toarg(ar)
    if (clickpd6 == 1 or clickpd7 == 1 or clickpd8 == 1) then
        repeat
            if RW == "HX" then
                PressAndReleaseKey("H")
                Sleep(25)
                PressAndReleaseKey("spacebar")
                Sleep(25)
            end
            if RW == "EL" then
                PressAndReleaseKey("Z")
                Sleep(25)
                PressAndReleaseKey("Q")
                Sleep(25)
            end
            if RW == "JQR" then
                PressAndReleaseMouseButton(1)
                Sleep(20)
                MoveMouseWheel(-1)
                Sleep(20)
                PressAndReleaseKey("Q")
                Sleep(20)
                PressAndReleaseKey("lctrl")
                Sleep(340)
            end
            if RW == "DPX" then
                PressAndReleaseKey("Z")
                Sleep(20)
                PressAndReleaseKey("V")
                Sleep(410)
            end
            if (ar == 1 or ar == 2 or ar == 3 or ar == 4 or ar == 5) and Logitech == "GHUB" then
                ismouse = IsMouseButtonPressed(ar)
            end
        until not ismouse or Logitech ~= "GHUB"
        if ((clickpd6 == 1 or clickpd7 == 1 or clickpd8 == 1) and Logitech == "LGS") then
            SetMKeyState(1)
        end
    end
end
function click()
    local ismouse = true
    local aa1 = Toarg(a1)
    repeat
        if (ij <= listLen) then
            if (offset_state == "P20" or offset_state == "Y_P20" or offset_state == "HMLK_DD" or offset_state == "XBS" or offset_state == "Y_XBS" or offset_state == "B301DD" or offset_state == "PXDD" or offset_state == "G7" or (LianFa == 1 and (offset_state == "LS" or offset_state == "Y_LS"))) then
                PressAndReleaseMouseButton(1)
            end
            offset = offset_list[ij];
            for var_i = 1, offset[4] do
                Sleep(offset_time)
                MoveMouseRelative(offset[2], offset[3])
            end
            if (clickpd == 1 and Logitech == "LGS") then
                SetMKeyState(2)
            end
            OutputLogMessage(ToUTF8(text_di) .. ij .. ToUTF8(text_qiang) .. "\n")
            ij = ij + 1
            if (ij > 21 and (offset_state == "Lstar" or offset_state == "Y_Lstar") and Lstar_KEY[2] == 1) then
                PressAndReleaseKey(Lstar_KEY[1])
                ij = 0
            end
            if offset_state == "LS" or offset_state == "Y_LS" then
                Sleep(280)
            end
        else
            ij = listLen
        end
        if (aa1 <= 5) and Logitech == "GHUB" then
            ismouse = IsMouseButtonPressed(aa1)
        end
    until not ismouse or Logitech ~= "GHUB"
end
function ToGun(qx1)
    if qx1 == "B301" then
        B301_offset_trim_list = setTbl(B301_offset_trim_list, B301_offset_list, text_B301)
        return B301_offset_list, B301_offset_time, "B301", text_B301, B301_offset_trim_list, B301_offset_trim_ratio, B301_offset_trim_amend;
    elseif qx1 == "ZZ" then
        ZZ_offset_trim_list = setTbl(ZZ_offset_trim_list, ZZ_offset_list, text_ZZ)
        return ZZ_offset_list, ZZ_offset_time, "ZZ", text_ZZ, ZZ_offset_trim_list, ZZ_offset_trim_ratio, ZZ_offset_trim_amend;
    elseif qx1 == "PX" then
        PX_offset_trim_list = setTbl(PX_offset_trim_list, PX_offset_list, text_PX)
        return PX_offset_list, PX_offset_time, "PX", text_PX, PX_offset_trim_list, PX_offset_trim_ratio, PX_offset_trim_amend;
    elseif qx1 == "HWK" then
        HWK_offset_trim_list = setTbl(HWK_offset_trim_list, HWK_offset_list, text_HWK)
        return HWK_offset_list, HWK_offset_time, "HWK", text_HWK, HWK_offset_trim_list, HWK_offset_trim_ratio, HWK_offset_trim_amend;
    elseif qx1 == "A99" then
        A99_offset_trim_list = setTbl(A99_offset_trim_list, A99_offset_list, text_A99)
        return A99_offset_list, A99_offset_time, "A99", text_A99, A99_offset_trim_list, A99_offset_trim_ratio, A99_offset_trim_amend;
    elseif qx1 == "FCNS" then
        FCNS_offset_trim_list = setTbl(FCNS_offset_trim_list, FCNS_offset_list, text_FCNS)
        return FCNS_offset_list, FCNS_offset_time, "FCNS", text_FCNS, FCNS_offset_trim_list, FCNS_offset_trim_ratio, FCNS_offset_trim_amend;
    elseif qx1 == "DN" then
        DN_offset_trim_list = setTbl(DN_offset_trim_list, DN_offset_list, text_DN)
        return DN_offset_list, DN_offset_time, "DN", text_DN, DN_offset_trim_list, DN_offset_trim_ratio, DN_offset_trim_amend;
    elseif qx1 == "LS" then
        LS_offset_trim_list = setTbl(LS_offset_trim_list, LS_offset_list, text_LS)
        return LS_offset_list, LS_offset_time, "LS", text_LS, LS_offset_trim_list, LS_offset_trim_ratio, LS_offset_trim_amend;
    elseif qx1 == "ZHZ" then
        ZHZ_offset_trim_list = setTbl(ZHZ_offset_trim_list, ZHZ_offset_list, text_ZHZ)
        return ZHZ_offset_list, ZHZ_offset_time, "ZHZ", text_ZHZ, ZHZ_offset_trim_list, ZHZ_offset_trim_ratio, ZHZ_offset_trim_amend;
    elseif qx1 == "P20" then
        P20_offset_trim_list = setTbl(P20_offset_trim_list, P20_offset_list, text_P20)
        return P20_offset_list, P20_offset_time, "P20", text_P20, P20_offset_trim_list, P20_offset_trim_ratio, P20_offset_trim_amend;
    elseif qx1 == "XBS" then
        XBS_offset_trim_list = setTbl(XBS_offset_trim_list, XBS_offset_list, text_XBS)
        return XBS_offset_list, XBS_offset_time, "Wingman", text_XBS, XBS_offset_trim_list, XBS_offset_trim_ratio, XBS_offset_trim_amend;
    elseif qx1 == "HMLK_DD" then
        HMLK_DD_offset_trim_list = setTbl(HMLK_DD_offset_trim_list, HMLK_DD_offset_list, text_HMLK_DD)
        return HMLK_DD_offset_list, HMLK_DD_offset_time, "HMLK_DD", text_HMLK_DD, HMLK_DD_offset_trim_list, HMLK_DD_offset_trim_ratio, HMLK_DD_offset_trim_amend;
    elseif qx1 == "M600" then
        M600_offset_trim_list = setTbl(M600_offset_trim_list, M600_offset_list, text_M600)
        return M600_offset_list, M600_offset_time, "M600", text_M600, M600_offset_trim_list, M600_offset_trim_ratio, M600_offset_trim_amend;
    elseif qx1 == "Lstar" then
        Lstar_offset_trim_list = setTbl(Lstar_offset_trim_list, Lstar_offset_list, text_Lstar)
        return Lstar_offset_list, Lstar_offset_time, "Lstar", text_Lstar, Lstar_offset_trim_list, Lstar_offset_trim_ratio, Lstar_offset_trim_amend;
    elseif qx1 == "Y_P20" then
        Y_P20_offset_trim_list = setTbl(Y_P20_offset_trim_list, Y_P20_offset_list, text_P20)
        return Y_P20_offset_list, Y_P20_offset_time, "Y_P20", text_P20, Y_P20_offset_trim_list, Y_P20_offset_trim_ratio, Y_P20_offset_trim_amend;
    elseif qx1 == "Y_XBS" then
        Y_XBS_offset_trim_list = setTbl(Y_XBS_offset_trim_list, Y_XBS_offset_list, text_XBS)
        return Y_XBS_offset_list, Y_XBS_offset_time, "Y_XBS", text_XBS, Y_XBS_offset_trim_list, Y_XBS_offset_trim_ratio, Y_XBS_offset_trim_amend;
    elseif qx1 == "Y_Lstar" then
        Y_Lstar_offset_trim_list = setTbl(Y_Lstar_offset_trim_list, Y_Lstar_offset_list, text_Lstar)
        return Y_Lstar_offset_list, Y_Lstar_offset_time, "Y_Lstar", text_Lstar, Y_Lstar_offset_trim_list, Y_Lstar_offset_trim_ratio, Y_Lstar_offset_trim_amend;
    elseif qx1 == "Y_A99" then
        Y_A99_offset_trim_list = setTbl(Y_A99_offset_trim_list, Y_A99_offset_list, text_A99)
        return Y_A99_offset_list, Y_A99_offset_time, "Y_A99", text_A99, Y_A99_offset_trim_list, Y_A99_offset_trim_ratio, Y_A99_offset_trim_amend;
    elseif qx1 == "Y_B301" then
        Y_B301_offset_trim_list = setTbl(Y_B301_offset_trim_list, Y_B301_offset_list, text_B301)
        return Y_B301_offset_list, Y_B301_offset_time, "Y_B301", text_B301, Y_B301_offset_trim_list, Y_B301_offset_trim_ratio, Y_B301_offset_trim_amend;
    elseif qx1 == "Y_ZHZ" then
        Y_ZHZ_offset_trim_list = setTbl(Y_ZHZ_offset_trim_list, Y_ZHZ_offset_list, text_ZHZ)
        return Y_ZHZ_offset_list, Y_ZHZ_offset_time, "Y_ZHZ", text_ZHZ, Y_ZHZ_offset_trim_list, Y_ZHZ_offset_trim_ratio, Y_ZHZ_offset_trim_amend;
    elseif qx1 == "Y_DN" then
        Y_DN_offset_trim_list = setTbl(Y_DN_offset_trim_list, Y_DN_offset_list, text_DN)
        return Y_DN_offset_list, Y_DN_offset_time, "Y_DN", text_DN, Y_DN_offset_trim_list, Y_DN_offset_trim_ratio, Y_DN_offset_trim_amend;
    elseif qx1 == "Y_PX" then
        Y_PX_offset_trim_list = setTbl(Y_PX_offset_trim_list, Y_PX_offset_list, text_PX)
        return Y_PX_offset_list, Y_PX_offset_time, "Y_PX", text_PX, Y_PX_offset_trim_list, Y_PX_offset_trim_ratio, Y_PX_offset_trim_amend;
    elseif qx1 == "Y_LS" then
        Y_LS_offset_trim_list = setTbl(Y_LS_offset_trim_list, Y_LS_offset_list, text_LS)
        return Y_LS_offset_list, Y_LS_offset_time, "Y_LS", text_LS, Y_LS_offset_trim_list, Y_LS_offset_trim_ratio, Y_LS_offset_trim_amend;
    elseif qx1 == "E45" then
        E45_offset_trim_list = setTbl(E45_offset_trim_list, E45_offset_list, text_E45)
        return E45_offset_list, E45_offset_time, "E45", text_E45, E45_offset_trim_list, E45_offset_trim_ratio, E45_offset_trim_amend;
    elseif qx1 == "Y_E45" then
        Y_E45_offset_trim_list = setTbl(Y_E45_offset_trim_list, Y_E45_offset_list, text_E45)
        return Y_E45_offset_list, Y_E45_offset_time, "Y_E45", text_E45, Y_E45_offset_trim_list, Y_E45_offset_trim_ratio, Y_E45_offset_trim_amend;
    elseif qx1 == "B301DD" then
        B301DD_offset_trim_list = setTbl(B301DD_offset_trim_list, B301DD_offset_list, text_B301)
        return B301DD_offset_list, B301DD_offset_time, "B301DD", text_B301, B301DD_offset_trim_list, B301DD_offset_trim_ratio, B301DD_offset_trim_amend;
    elseif qx1 == "PXDD" then
        PXDD_offset_trim_list = setTbl(PXDD_offset_trim_list, PXDD_offset_list, text_PX)
        return PXDD_offset_list, PXDD_offset_time, "PXDD", text_PX, PXDD_offset_trim_list, PXDD_offset_trim_ratio, PXDD_offset_trim_amend;
    elseif qx1 == "G7" then
        G7_offset_trim_list = setTbl(G7_offset_trim_list, G7_offset_list, text_PX)
        return G7_offset_list, G7_offset_time, "G7", text_G7, G7_offset_trim_list, G7_offset_trim_ratio, G7_offset_trim_amend;
    elseif qx1 == "CN" then
        CN_offset_trim_list = setTbl(CN_offset_trim_list, CN_offset_list, text_PX)
        return CN_offset_list, CN_offset_time, "CN", text_CN, CN_offset_trim_list, CN_offset_trim_ratio, CN_offset_trim_amend;
    elseif qx1 == "BZ" then
        BZ_offset_trim_list = setTbl(BZ_offset_trim_list, BZ_offset_list, text_PX)
        return BZ_offset_list, BZ_offset_time, "BZ", text_BZ, BZ_offset_trim_list, BZ_offset_trim_ratio, BZ_offset_trim_amend;
    elseif qx1 == "CAR" then
        CAR_offset_trim_list = setTbl(CAR_offset_trim_list, CAR_offset_list, text_CAR)
        return CAR_offset_list, CAR_offset_time, "CAR", text_CAR, CAR_offset_trim_list, CAR_offset_trim_ratio, CAR_offset_trim_amend;
    else
        a1, a2, a3, a4, a5, a6, a100 = 100
        OutputLogMessage(ToUTF8(text_qxpz) .. " ( " .. qx1 .. " ) " .. "\n")
        return {}, 0, "", {}, {}, 1, 0
    end
end
function Get_GUNtext(gun)
    if gun == "B301" or gun == "Y_B301" then
        return text_B301;
    elseif gun == "ZZ" then
        return text_ZZ;
    elseif gun == "M600" then
        return text_M600;
    elseif gun == "PX" or gun == "Y_PX" then
        return text_PX;
    elseif gun == "HWK" then
        return text_HWK;
    elseif gun == "A99" or gun == "Y_A99" then
        return text_A99;
    elseif gun == "FCNS" then
        return text_FCNS;
    elseif gun == "DN" or gun == "Y_DN" then
        return text_DN;
    elseif gun == "LS" or gun == "Y_LS" then
        return text_LS;
    elseif gun == "ZHZ" or gun == "Y_ZHZ" then
        return text_ZHZ;
    elseif gun == "P20" or gun == "Y_P20" then
        return text_P20;
    elseif gun == "HMLK_DD" then
        return text_HMLK_DD;
    elseif gun == "Lstar" or gun == "Y_Lstar" then
        return text_Lstar;
    elseif gun == "E45" or gun == "Y_E45" then
        return text_E45;
    elseif gun == "B301DD" then
        return text_B301;
    elseif gun == "PXDD" then
        return text_PX;
    elseif gun == "G7" then
        return text_G7;
    elseif gun == "CN" then
        return text_CN;
    elseif gun == "BZ" then
        return text_BZ;
    elseif gun == "CAR" then
        return text_CAR;
    elseif gun == "XBS" then
        return text_XBS;
    end
end
function SetGun_offset(tbl1, tbl2, ratio, amend)
    if ratio == nil then
        ratio = { 1, 1 }
    end
    if amend == nil then
        amend = { 0, 0 }
    end
    local tbl3 = {}
    for i, t1 in ipairs(tbl1) do
        s1, s2, s3, s4 = t1[1], t1[2], t1[3], t1[4]
        s2 = s2 * ratio[1]
        s3 = s3 * ratio[2]
        if s2 > 0 then
            s2 = s2 + amend[1]
        elseif s2 < 0 then
            s2 = s2 - amend[1]
        end
        if s3 > 0 then
            s3 = s3 + amend[2]
        elseif s3 < 0 and amend[2] < 0 then
            s3 = s3 - amend[2]
        end
        s2 = s2 + tbl2[i][2]
        s3 = s3 + tbl2[i][3]
        table.insert(tbl3, { s1, s2, s3, s4 })
    end
    return tbl3
end
function setTbl(tbl1, tbl2, tbl3)
    if type(tbl1) ~= "table" then
        tbl1 = {}
        tbl2len = getTblLen(tbl2)
        for tabi = 1, tbl2len, 1 do
            table.insert(tbl1, { tabi, 0, 0 })
        end
        if version == 1 then
            OutputLogMessage(ToUTF8(tbl3) .. ToUTF8(text_wxtzsj) .. "\n")
        end
    end
    return tbl1;
end
function getTblLen(tbl)
    if type(tbl) ~= "table" then
        OutputLogMessage("table erron")
        return
    end
    local len = 0
    for k, v in pairs(tbl) do
        len = len + 1
    end
    return len
end
function setGUN(gun)
    if (offset_state1_1 == gun or offset_state1_2 == gun or offset_state1_3 == gun) then
        qx_state = 1
    elseif (offset_state2_1 == gun or offset_state2_2 == gun or offset_state2_3 == gun) then
        qx_state = 2
    end
    OutputLogMessage("\n" .. ToUTF8(text_dqwq) .. ToUTF8(Get_GUNtext(gun)) .. "\n")
    if (offset_state1_1 == gun or offset_state2_1 == gun) then
        if IsKeyLockOn("numlock") == false then
            PressAndReleaseKey("numlock")
        end
        if IsKeyLockOn("scrolllock") == true then
            PressAndReleaseKey("scrolllock")
        end
    elseif (offset_state1_2 == gun or offset_state2_2 == gun) then
        if IsKeyLockOn("capslock") == true then
            PressAndReleaseKey("capslock")
        end
        if IsKeyLockOn("scrolllock") == false then
            PressAndReleaseKey("scrolllock")
        end
    elseif (offset_state1_3 == gun or offset_state2_3 == gun) then
        if IsKeyLockOn("capslock") == true then
            PressAndReleaseKey("capslock")
        end
        if IsKeyLockOn("scrolllock") == true then
            PressAndReleaseKey("scrolllock")
        end
    end
end
function ToUTF8(text)
    local tests = ""
    for i = 1, #text do
        tests = tests .. string.char(text[i])
    end
    return tests
end
function Toarg(ag)
    if ag == 2 then
        ag = 3
    elseif ar == 3 then
        ag = 2
    end
    return ag
end